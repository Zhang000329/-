<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace属性：用于指定当前映射文件和那个接口进行映射
    需要指定接口的文件路径，需要标注包的完整路径接口-->
<mapper namespace="com.zyj.store.mapper.UserMapper">
<!--    自定义映射规则-->
<!--    id：标签给这个映射分配一个唯一的id值就是resultMap=的值
        type：取值是一类，表示数据空中的查询结果 与java中哪个实体类进行映射-->
    <resultMap id="UserEntityMap" type="com.zyj.store.entity.User">
<!--        将表的资源和表的属性不一致的字段进行匹配，名称一致的字段可以省略不写-->
<!--        配合完成名称不一致的映射
            column：表示表中的资源名称
            property：表示类中的属性名称
            在定义映射规则时主键时不可以省略的-->
        <id column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>

    </resultMap>

<!--    id属性：表示映射文件方法中的名称，直接在标签中来来编写sql-->
<!--    useGeneratedKeys:开启某个字段的值递增
        keyProperty：将表中的那个字段作为主键递增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
INSERT INTO
    t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time, modified_user, modified_time)
    VALUES(#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <select id="findByUsername" resultMap="UserEntityMap">
        select * from t_user where username = #{username}
    </select>

    <update id="updatePasswordByUid">
        update t_user set
            password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>
    <select id="findByUid" resultMap="UserEntityMap">
        select *
        from t_user
        where uid=#{uid}
    </select>

    <update id="updateInfoUid">
        update t_user
        set
         <!--if表示条件判断的标签，test接受的是一个返回值为boolean类型的条件-->
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="gender != null">gender = #{gender},</if>
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = ${uid}
    </update>

    <update id="updateAvatarByUid">
        update t_user
        set
            avatar = #{avatar},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>
</mapper>